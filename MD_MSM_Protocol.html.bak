<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="./styles.css">
    <title>MD MSM Protocol</title>
  </head>
  <body>
    <h1>MD MSM Protocol</h1>
    <h2>Parametrization of organic molecules</h2>
    <p>The parametrization is not required for peptides, for cyclic peptides a
      workaround is needed to overcome the cyclization problem.</p>
    <p>The parametrization is carried out on the minimum energy conformer (MEC)
      resulting from Omega conformational sampling after the minimization with
      Szybki. </p>
    <p><span style="color: red;">WARNING</span>: Omega changes the atoms order,
      thus it is MANDATORY to use the files obtained by the Szybki minimization
      of Omega output to avoid problems when the MD simulation protocol is used
      to study all conformations. In principle, the output of Omega is always
      the same and it does not depend on the epsilon used to simulate the
      environment.</p>
    <p>The parametrization is carried out with acpype tool.</p>
    <h3>acpype on site</h3>
    <p>Set up of the environment</p>
    <div id="Instr">source /home/germondi/gromacs_setup.source</div>
    <p> </p>
    <p>In the setup file the commands are the following</p>
    <div id="Instr"># GROMACS environment export PATH=/opt/gromacs/bin:$PATH<br>
      <br>
      # VMD environment (from BiKi)<br>
      export PATH=/opt/biki/BiKiLifeSciences/vmd-1.9.2/vmd_bin/:$PATH<br>
      <br>
      # Babel setup (installation in user directory)<br>
      export PATH=/opt/openbabel/openbabel-openbabel-2-4-0/bin:$PATH<br>
      export BABEL_LIBDIR=/opt/openbabel/openbabel-openbabel-2-4-0/lib<br>
      export BABEL_DATADIR=/opt/openbabel/openbabel-openbabel-2-4-0/data<br>
      <br>
      # acpype (and Antechamber) environment<br>
      export PATH=/home/germondi/acpype/scripts:$PATH<br>
      export PATH=/home/germondi/acpype/amber19-0_linux/bin:$PATH<br>
      export PATH=/home/germondi/acpype/amber19-0_linux/dat:$PATH<br>
      export PATH=/home/germondi/acpype/amber19-0_linux/lib:$PATH<br>
    </div>
    <p></p>
    <p></p>
    <p>Copy the file with the MEC coordinates (<i>mol_solv_final_mec.mol2</i>)
      in the working directory and then submit it to acpype</p>
    <div id="Instr">acpype.py -i <i>mol_solv_final_mec.mol2</i> -b ach -n
      molcharge</div>
    <p>Where molcharge is the charge of the molecule.</p>
    <p>The output is saved in a directory <i>mol_solv_final_mec.acpype</i>.</p>
    <p>Files that we are looking for are the files with the GAFF
      parametrization:</p>
    <ul>
      <li>mol_solv_final_GMX.itp</li>
      <li>mol_solf_final_GMX.top</li>
    </ul>
    <h3>acpype on-line</h3>
    <p>Open an Ineternet browser and then go to the <a href="http://bio2byte.be/acpype/"
        target="_blank">Bio2Bite </a>web site (a registration is required)</p>
    <p>Click on the submit link, login with your credentials and then load <i>mol_solv_final_mec.mol2</i></p>
    <p>Select the correct charge and submit. </p>
    <p>You will receive a mail when the parametrization is finished.</p>
    <p>Download and unzip the file with the results, a directory acpype is
      created with all the needed files, in particular:</p>
    <ul>
      <li>mol_solv_final_GMX.itp</li>
      <li>mol_solf_final_GMX.top</li>
    </ul>
    <h3>Topology test</h3>
    <p>Firstly, it is possible to test the topology files using the em.mdp file
      included in the acpype output following the instruction reported in
      em.mdp.</p>
    <p>A second test is performed in the directory where the simulations will be
      launched.</p>
    <p>The new tests will be launched directly in the topology directory <i>top</i>.
      Thus, copy the following files in <i>top</i>:</p>
    <ul>
      <li>mol_solv_final_GMX.itp</li>
      <li>mol_solf_final_GMX.top</li>
      <li>if the simulation is run in chloroform</li>
      <ul>
        <li>CHL_Box.pdb</li>
        <li>CHL.itp</li>
      </ul>
      <li>the file mol2 that will be used in the next simulations (in principle
        the same used by acpype or a file obtained by the conformational
        analysis</li>
    </ul>
    Create a file em.mdp to test the topology with a minimization. The file has
    to contain the following instructions:
    <div id="Instr">; Parameters describing what to do, when to stop and what to
      save<br>
      integrator&nbsp; = steep&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;
      Algorithm (steep = steepest descent minimization)<br>
      emtol&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      1000.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Stop minimization when
      the maximum force &lt; 1000.0 kJ/mol/nm<br>
      emstep&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      0.01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Minimization
      step size<br>
      nsteps&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      50000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Maximum number of
      (minimization) steps to perform<br>
      <br>
      ; Parameters describing how to find the neighbors of each atom and how to
      calculate the interactions<br>
      nstlist&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Frequency to update
      the neighbor list and long range forces<br>
      cutoff-scheme&nbsp;&nbsp; = Verlet&nbsp;&nbsp;&nbsp; ; Buffered neighbor
      searching<br>
      ns_type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      grid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Method to determine neighbor list
      (simple, grid)<br>
      coulombtype&nbsp;&nbsp;&nbsp;&nbsp; =
      PME&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Treatment of long range
      electrostatic interactions<br>
      rcoulomb&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Short-range electrostatic
      cut-off<br>
      rvdw&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
      1.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Short-range Van der Waals
      cut-off<br>
      pbc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      = xyz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ; Periodic Boundary Conditions
      in all 3 dimensions
      <p></p>
    </div>
    <p></p>
    <p>Now we test the topology using the original mol2 file to be sure that
      there will be no problems when other conformations will be used</p>
    <div id="Instr">obabel -imol2 <i>mol_solv_final_mec.mol2</i> -opdb -O <i>mol_solv_final_mec.pdb</i><br>
      gmx editconf -f <i>mol_solv_final_mec.pdb</i> -o <i>mol_test.gro</i> -bt
      cubic -d 0.5</div>
    <p>Now run the minimization with Gromacs</p>
    <div id="Instr">gmx grompp -f em.mdp -c mol_test.gro -p
      ach_wat_fin_mec_GMX.top -o em.tpr -v<br>
      gmx mdrun -ntmpi 1 -v -deffnm em</div>
    <p>Problems that could be encountered during grompp run:</p>
    <p>1) Non-matching atom names</p>
    <p>Message:</p>
    <p>Fatal error:<br>
      Too many warnings (1), gmx terminated.<br>
      WARNING 1 [file arv_GMX.top, line 15]:<br>
      &nbsp; 1 non-matching atom name<br>
      &nbsp; atom names from arv_GMX.top will be used<br>
      &nbsp; atom names from arv852_chl_01.gro will be ignored</p>
    <p> </p>
    <p>Solution:</p>
    <p>Check the itp file and correct atom names. In particular, some atoms,
      i.e. chlorine, are reported in capital letters in the pdb file, i.e. CL,
      whereas in the itp file not, i.e. Cl. In these cases, the CL has to be
      changed in Cl, check the definition in the pdb file. This solution should
      guarantee compatibility with all the conformers. </p>
    <p>2) If grompp exits with an error about a cut-off, the box dimensions has
      to be increased until the procedure finishes without errors (i.e. change
      -d 0.5 to -d 1.0 or larger values)</p>
    <p> Check em.gro with VMD to be sure that all is ok</p>
    <div id="Instr">vmd em.gro</div>
    <p>From the VMD console:</p>
    <div id="Instr">pbc box_draw</div>
    <p>Check the dimensions of the box to be sure that the molecule is well
      positioned.</p>
    <p>If all is ok, move to the next step.</p>
    <h4>MD setup in a box of water</h4>
    <p>Create a new directory mol_wat_setup and copy herein the following files
      from the test directory</p>
    <ul>
      <li>mol_solv_final_GMX.itp</li>
      <li>mol_solf_final_GMX.top</li>
      <li>mol_test.gro</li>
    </ul>
    <p>Solvate the molecule with water</p>
    <div id="Instr">gmx solvate -cp ach_test.gro -o ach_test_wat.gro -p
      ach_wat_fin_mec_GMX.top</div>
    <ul>
      <li>Check the result with VMD</li>
    </ul>
    <p>The topology (.top) file is updated with the addition of a new row in [
      molecules ] section</p>
    <p>Edit the topology file </p>
    <ul>
      <li>delete [ defaults ] section</li>
      <li>insert itp information about deafult ff, water model (tip3p) and ions
        (even if it is necessary only for charged molecules) </li>
    </ul>
    <p></p>
    <div id="Instr">; ach_wat_fin_mec_GMX.top created by acpype (v:
      2019-07-10T18:04:00UTC) on Fri Apr 10 12:05:13 2020<br>
      <br>
      ; Include default ff<br>
      #include "amber99sb.ff/forcefield.itp"<br>
      <br>
      ; Include mol_solv_fin_mec_GMX.itp topology<br>
      #include "mol_solv_fin_mec_GMX.itp"<br>
      <br>
      ; Include the water model<br>
      #include "amber99sb.ff/tip3p.itp"<br>
      <br>
      ; Include ions (not alway necessary)<br>
      #include "amber99sb.ff/ions.itp"
      <p></p>
    </div>
    <ul>
      <li> The order is mandatory because forcefield.itp contains the [ defaults
        ] section that must be unique whereas the topology file of our molecule
        has a section [ atomtypes ] to define new atoms that must be located
        before the definitions of other molecules. </li>
    </ul>
    <p>Prepare the file tpr that will be directly used in the minimization for
      neutral molecules whereas it is used to add ion(s) when the molecule is
      charged</p>
    <p></p>
    <div id="Instr">gmx grompp -f em.mdp -c mol_test_wat.gro -p
      mol_wat_fin_mec_GMX.top -o em.tpr</div>
    <p>Now <b>if the molecule is ionized</b>, it is mandatory to balance the
      number of charges by the addition of a counter ion, To add ions, the file
      tpr is required</p>
    <div id="Instr">gmx genion -s em.tpr -o mol_test_wat_fin.gro -p
      ach_GMX_1.top -pname NA -nname CL -neutral</div>
    <ul>
      <li>Select SOL option</li>
    </ul>
    <p>Check the resulting gro file to be sure that ion(s) was(were) added and
      check that topology was modified according to the added ion(s)</p>
    <p>If ions were added, rebuild the tpr file</p>
    <div id="Instr">gmx grompp -f em.mdp -c mol_test_wat.gro -p
      mol_wat_fin_mec_GMX.top -o em.tpr</div>
    <p>and run the test minimization</p>
    <div id="Instr">gmx mdrun -ntmpi 1 -v -deffnm em</div>
    <p>Check the output em.gro with VMD</p>
    <p>Check the result with VMD</p>
    <h4>MD setup in chloroform</h4>
    <p>Check that in the top file the following files are present:</p>
    <ul>
      <li>mol_GMX.itp</li>
      <li>mol_GMX.top</li>
      <li>CHL_Box.pdb</li>
      <li>CHL.itp</li>
      <li>mol.gro</li>
    </ul>
    <div id="Instr">gmx solvate -cp mol.gro -cs CHL_Box.pdb -o
      mv1_model1_solv.gro -p topol_cyc.top</div>
    <p></p>
    <p>Check the result with VMD </p>
    <p>The topology (.top) file is updated with the addition of a new row in [
      molecules ] section</p>
    <p> </p>
    <p>Edit the topology file </p>
    <ul>
      <li>delete [ defaults ] section</li>
      <li>insert itp information about deafult ff, water model (tip3p) and ions
        (even if it is necessary only for charged molecules) </li>
    </ul>
    <p></p>
    <div id="Instr">; arv_GMX.top created by acpype (v: 2020-03-15T13:27:00CET)
      on Fri Sep 25 10:01:49 2020<br>
      <br>
      ; Include default ff<br>
      #include "amber99sb.ff/forcefield.itp"<br>
      <br>
      ; Include mol_GMX.itp topology<br>
      #include "mol_GMX.itp"<br>
      <br>
      ; Include chloroform<br>
      #include "CHL.itp"<br>
      <br>
      ; Include ions (not alway necessary)<br>
      #include "amber99sb.ff/ions.itp"<br>
      <p></p>
    </div>
    <ul>
      <li> The order is mandatory because forcefield.itp contains the [ defaults
        ] section that must be unique whereas the topology file of our molecule
        has a section [ atomtypes ] to define new atoms that must be located
        before the definitions of other molecules. </li>
      <li>h3 atom type of chloroform is not present in the [Atom types] section
        of the mol.itp file but this section cannot be called more than one
        times. To resolve the error it is mandatory to add in the&nbsp; [Atom
        types] section of the mol.itp a row with h3 definition</li>
    </ul>
    <div id="Instr">[ atomtypes ]<br>
      ;name&nbsp;&nbsp; bond_type&nbsp;&nbsp;&nbsp;&nbsp;
      mass&nbsp;&nbsp;&nbsp;&nbsp; charge&nbsp;&nbsp; ptype&nbsp;&nbsp;
      sigma&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      epsilon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Amb<br>
      ... ...<br>
      h3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      h3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.00000&nbsp;
      0.00000&nbsp;&nbsp; A&nbsp;&nbsp;&nbsp;&nbsp; 2.11499e-01&nbsp;&nbsp;
      6.56888e-02 ; 1.19&nbsp; 0.0157</div>
    <ul>
    </ul>
    <p>Prepare the file tpr that will be directly used in the minimization for
      neutral molecules whereas it is used to add ion(s) when the molecule is
      charged</p>
    <p></p>
    <div id="Instr">gmx grompp -f em.mdp -c mol_test_wat.gro -p
      mol_wat_fin_mec_GMX.top -o em.tpr</div>
    <p>Now <b>if the molecule is ionized</b>, it is mandatory to balance the
      number of charges by the addition of a counter ion, To add ions, the file
      tpr is required</p>
    <div id="Instr">gmx genion -s em.tpr -o mol_test_wat_fin.gro -p
      ach_GMX_1.top -pname NA -nname CL -neutral</div>
    <ul>
      <li>Select the option related to chloroform option</li>
    </ul>
    <p>Check the resulting gro file to be sure that ion(s) was(were) added and
      check that topology was modified according to the added ion(s)</p>
    <p>If ions were added, rebuild the tpr file</p>
    <div id="Instr">gmx grompp -f em.mdp -c mol_test_wat.gro -p
      mol_wat_fin_mec_GMX.top -o em.tpr</div>
    <p>and run the test minimization</p>
    <div id="Instr">gmx mdrun -ntmpi 1 -v -deffnm em</div>
    <p>Check the output em.gro with VMD</p>
    <p>Check the result with VMD</p>
    <h3>Setup MD runs for MSM </h3>
    <p>Now, the setup of MD simulations has to be carried out to all the
      conformations selected from the Conformational Sampling / Cluster step.</p>
    <p>In principle, every MD simulation will run for 100 ns, thus 100
      conformations will be used to arrive to 100 x 100 ns = 10000 ns = 10 μs
      (suggested total run time from literature).</p>
    <p>Probably, a first multi run of about 50 conformations could be a good
      starting point for a tentative MSM analysis. The MSM analysis could
      suggest the new conformations for the remaining simulations.</p>
    <p>Firstly, select mol_01-50.mol2 conformations.</p>
    <p>Then, check the consistency between the selected conformations and the
      MEC used in the parametrization</p>
    <ul>
      <li>Check the name of the residue, that it must be the same</li>
      <li>Check the order of the atoms, that must be the same</li>
    </ul>
    <p>All steps are collected in bash scripts that allow the automation of the
      process.</p>
    <h4>Step 0. Preparation of directory tree</h4>
    <p>Create the working directory and the run the script <i>md_step0_setupdir.sh</i></p>
    <div id="Instr"># Usage: ./md_step0.sh <br>
      # setup of the directories<br>
      <br>
      mkdir diagn<br>
      mkdir md_out<br>
      mkdir mol2<br>
      <br>
      mkdir traj<br>
      mkdir traj_msm<br>
      <br>
      mkdir scripts<br>
      <br>
      # File list<br>
      #&nbsp;&nbsp; em.mdp<br>
      #&nbsp;&nbsp; eq-1.mdp<br>
      #&nbsp;&nbsp; eq-2.mdp<br>
      #&nbsp;&nbsp; eq-3.mdp<br>
      #&nbsp;&nbsp; eq-4.mdp<br>
      #&nbsp;&nbsp; production.mdp<br>
      #&nbsp;&nbsp; production_BriefForDebug.mdp<br>
      <br>
      mkdir top<br>
      <br>
      # File list<br>
      #&nbsp;&nbsp; mol.itp<br>
      #&nbsp;&nbsp; mol.top<br>
      #&nbsp;&nbsp; CHL_Box.pdb (if the simulation is run in chloroform)<br>
      #&nbsp;&nbsp; CHL.itp (the should be move in the root simulation
      directory)<br>
    </div>
    <p>The script makes all the directories.</p>
    <p>Copy the mol2 files in the directory mol2.</p>
    <ul>
      <li>If you only need to run simulations on some mol2 files, you can create
        subdirectories to move unnecessary files to. The simulation scripts run
        on the mol2 file located in the mol2 root directory</li>
    </ul>
    <h3>Step 1. Setup and minimization</h3>
    <p>Run the script: <i>./md_step1.sh basenam</i>e</p>
    <div id="Instr"># Usage: ./md_step1.sh root_name<br>
      # root_name: is the root name of the generated topology file<br>
      <br>
      export GMX_MAXBACKUP=-1<br>
      <br>
      for f in ./mol2/*.mol2; do<br>
      <br>
      &nbsp;&nbsp;&nbsp; name=$(basename $f .mol2)<br>
      <br>
      &nbsp;&nbsp;&nbsp; echo $name<br>
      &nbsp;&nbsp;&nbsp; cp mol2/$name.mol2 .<br>
      &nbsp;&nbsp;&nbsp; obabel -imol2 $name.mol2 -opdb -O $name.pdb<br>
      &nbsp;&nbsp;&nbsp; gmx editconf -f $name.pdb -o $name.gro -bt cubic -box
      3.5 3.5 3.5<br>
      &nbsp;&nbsp;&nbsp; cp top/$1_GMX.top $name.top<br>
      &nbsp;&nbsp;&nbsp; cp top/$1_GMX.itp .<br>
      &nbsp;&nbsp;&nbsp; gmx solvate -cp $name.gro -o ${name}_sol.gro -p
      $name.top -cs top/CHL_Box.pdb<br>
      &nbsp;&nbsp;&nbsp; gmx grompp -f scripts/em.mdp -c ${name}_sol.gro -p
      $name.top -o em.tpr<br>
      &nbsp;&nbsp;&nbsp; echo 4 | gmx genion -s em.tpr -o ${name}_sol.gro -p
      $name.top -pname NA -nname CL -neutral<br>
      &nbsp;&nbsp;&nbsp; gmx grompp -f scripts/em.mdp -c ${name}_sol.gro -p
      $name.top -o em.tpr<br>
      &nbsp;&nbsp;&nbsp; mpirun -np 1 mdrun -deffnm em -cpt 1 -cpo
      em_restart.cpt<br>
      &nbsp;&nbsp;&nbsp; cp em.gro md_out/${name}_sol_em.gro<br>
      &nbsp;&nbsp;&nbsp; mv ${name}_sol.gro md_out<br>
      <br>
      done<br>
      <br>
      mv *.gro md_out<br>
      rm *.mol2<br>
      rm *.pdb<br>
      rm em*<br>
    </div>
    <p>Some remarks:</p>
    <ul>
      <li>the basename must be the name used for the conformational
        sampling/minimization procedure</li>
      <li>in the editconf the cubic box dimensions are fixed to 3.5 but the
        dimensions have to be checked to be sure that the molecule is well
        positioned inside the box</li>
      <li>finally, the number of solvent molecules could be different in the gro
        file producing an error because in the root topology file the number of
        chloroform molecules is fixed, in this case it is necessary to modify
        manually the number of solvent molecules</li>
    </ul>
    <p>To check the run has finished without error, it is possible to count top
      files, their number must be the same of the number of mol2 files.</p>
    <div id="Instr">ls *.top | wc -l<br>
      ls mol2/*.mol2 | wc -l</div>
    <p><br>
    </p>
    <br>
    <h2> </h2>
    <p> </p>
  </body>
</html>
